     1                                  ; op.asm (Day 5 - 切换到 32 位保护模式)
     2                                  ; 完整、可启动的 512 字节版本
     3                                  
     4                                  BITS 16
     5                                  ORG  0x7c00
     6                                  
     7                                  ; ---------------------------------
     8                                  ; 定义常量
     9                                  ; ---------------------------------
    10                                  CYLS EQU 10         ; 我们假设先只读 10 个柱面
    11                                  
    12                                  ; ---------------------------------
    13                                  ; FAT12 软盘头部 (BPB)
    14                                  ; ---------------------------------
    15 00000000 EB4E                        JMP entry
    16 00000002 90                          DB 0x90
    17 00000003 48454C4C4F49504C            DB "HELLOIPL" ; 厂商名 (8 字节)
    18 0000000B 0002010100                  DB 0x00, 0x02, 0x01, 0x01, 0x00
    19 00000010 02E000400BF00900            DB 0x02, 0xe0, 0x00, 0x40, 0x0b, 0xf0, 0x09, 0x00
    20 00000018 1200020000000000            DB 0x12, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00
    21 00000020 400B0000000029FF            DB 0x40, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x29, 0xff
    22 00000028 FFFFFF48454C4C4F2D-         DB 0xff, 0xff, 0xff, "HELLO-OS   " ; 卷标 (11 字节)
    22 00000031 4F53202020         
    23 00000036 4641543132202020            DB "FAT12   " ; 文件系统类型 (8 字节)
    24 0000003E 0000                        DB 0x00, 0x00
    25 00000040 <res 10h>                   RESB 16     ; 保留 16 字节
    25          ******************       warning: uninitialized space declared in .text section: zeroing [-w+zeroing]
    26                                  
    27                                  ; ---------------------------------
    28                                  ; 16 位模式程序核心
    29                                  ; ---------------------------------
    30                                  entry:
    31                                      ; 初始化寄存器 (设置栈)
    32 00000050 B80000                      MOV AX, 0
    33 00000053 8ED0                        MOV SS, AX
    34 00000055 BC007C                      MOV SP, 0x7c00
    35 00000058 8ED8                        MOV DS, AX
    36                                  
    37                                  ; ---------------------------------
    38                                  ; 读磁盘 (加载内核)
    39                                  ; ---------------------------------
    40 0000005A B82008                      MOV AX,0x0820
    41 0000005D 8EC0                        MOV ES,AX
    42 0000005F B500                        MOV CH,0 ; 柱面0
    43 00000061 B600                        MOV DH,0 ; 磁头0
    44 00000063 B102                        MOV CL,2 ; 扇区2
    45                                  readloop:
    46 00000065 BE0000                      MOV SI,0 ; 记录失败次数的寄存器
    47                                  retry:
    48 00000068 B402                        MOV AH,0x02 ; AH=0x02 : 读入磁盘
    49 0000006A B001                        MOV AL,1 ; 1个扇区
    50 0000006C BB0000                      MOV BX,0
    51 0000006F B200                        MOV DL,0x00 ; A驱动器
    52 00000071 CD13                        INT 0x13 ; 调用磁盘BIOS
    53 00000073 7312                        JNC next
    54 00000075 83C601                      ADD SI,1
    55 00000078 83FE05                      CMP SI,5
    56 0000007B 7308                        JAE error
    57 0000007D B400                        MOV AH,0x00
    58 0000007F B200                        MOV DL,0x00
    59 00000081 CD13                        INT 0x13
    60 00000083 EBE3                        JMP retry
    61                                  error:
    62 00000085 EB66                        JMP fin  
    63                                  
    64                                  next:
    65 00000087 8CC0                        MOV AX,ES
    66 00000089 83C020                      ADD AX, 512/16
    67 0000008C 8EC0                        MOV ES,AX
    68 0000008E 80C101                      ADD CL,1
    69 00000091 80F912                      CMP CL,18
    70 00000094 76CF                        JBE readloop
    71 00000096 B101                        MOV CL,1
    72 00000098 80C601                      ADD DH,1
    73 0000009B 80FE02                      CMP DH,2
    74 0000009E 72C5                        JB readloop
    75 000000A0 B600                        MOV DH,0
    76 000000A2 80C501                      ADD CH,1
    77 000000A5 80FD0A                      CMP CH,CYLS
    78 000000A8 72BB                        JB readloop
    79                                  
    80                                  ; ---------------------------------
    81                                  ; ★★★ 设置VGA图形模式 ★★★
    82                                  ; ---------------------------------
    83                                      ; 在进入保护模式之前设置显示模式
    84                                      ; 必须在16位实模式下调用BIOS中断
    85 000000AA B81300                      MOV AX, 0x0013  ; AH=0x00, AL=0x13
    86                                                      ; 设置为VGA 320x200 256色图形模式
    87 000000AD CD10                        INT 0x10        ; 调用视频BIOS中断
    88                                  
    89                                  ; ---------------------------------
    90                                  ; ★★★ 切换到 32 位保护模式 ★★★
    91                                  ; ---------------------------------
    92                                  
    93                                      ; 0. 禁用中断（非常重要！）
    94                                      ;    如果不禁用，硬件中断会导致系统崩溃（因为还没有IDT）
    95 000000AF FA                          CLI
    96                                  
    97                                      ; 1. 写入 CYLS 信息
    98 000000B0 C706F00F0A00                MOV WORD [0x0ff0], CYLS
    99                                  
   100                                      ; 2. 键盘控制器：打开 A20 Gate
   101                                      ;    (允许 CPU 访问 1MB 以上内存)
   102                                  wait_KBC_sendready:
   103 000000B6 E464                        IN  AL, 0x64
   104 000000B8 2402                        AND AL, 0x02
   105 000000BA 75FA                        JNE wait_KBC_sendready
   106 000000BC B0D1                        MOV AL, 0xd1
   107 000000BE E664                        OUT 0x64, AL
   108                                  wait_KBC_sendready_2:
   109 000000C0 E464                        IN  AL, 0x64
   110 000000C2 2402                        AND AL, 0x02
   111 000000C4 75FA                        JNE wait_KBC_sendready_2
   112 000000C6 B0DF                        MOV AL, 0xdf  ; 0xdf = 开启 A20
   113 000000C8 E660                        OUT 0x60, AL
   114                                  wait_KBC_sendready_3:
   115 000000CA E464                        IN  AL, 0x64
   116 000000CC 2402                        AND AL, 0x02
   117 000000CE 75FA                        JNE wait_KBC_sendready_3
   118                                  
   119                                      ; 3. 加载 GDT (全局描述符表)
   120                                      ;    GDT 告诉 CPU 32位模式下的内存布局
   121 000000D0 0F0116[0801]                LGDT [GDTR0]
   122                                  
   123                                      ; 4. 拨动开关！设置 CR0 寄存器的 PE 位
   124                                      ;    PE=1 (Protection Enable)
   125 000000D5 0F20C0                      MOV EAX, CR0
   126 000000D8 6625FFFFFF7F                AND EAX, 0x7fffffff ; (书中不用)
   127 000000DE 6683C801                    OR  EAX, 0x00000001
   128 000000E2 0F22C0                      MOV CR0, EAX
   129                                  
   130                                      ; 5. ★★★ 真正切换！ ★★★
   131                                      ;    一个 JMP 指令清空 CPU 缓存，
   132                                      ;    并设置 CS 寄存器为 0x0008 (32位代码段)
   133 000000E5 66EA[0E010000]0800          JMP DWORD 8:prot_mode_start ; 8 = 0x0008
   134                                  
   135                                  fin:
   136 000000ED F4                          HLT
   137 000000EE EBFD                        JMP fin
   138                                  
   139                                  ; ---------------------------------
   140                                  ; GDT (全局描述符表)
   141                                  ; ---------------------------------
   142                                  GDT0:
   143                                      ; 空描述符 (必须有)
   144 000000F0 ????????????????            RESB 8
   144          ******************       warning: uninitialized space declared in .text section: zeroing [-w+zeroing]
   145                                      ; 代码段描述符 (4GB)
   146 000000F8 FFFF                        DW 0xffff   ; 段界限 (low)
   147 000000FA 0000                        DW 0x0000   ; 段基址 (low)
   148 000000FC 00                          DB 0x00     ; 段基址 (mid)
   149 000000FD 9A                          DB 0x9a     ; 属性 (P=1, DPL=00, S=1, TYPE=1010 -> 可执行/可读)
   150 000000FE CF                          DB 0xcf     ; 属性+界限 (G=1, D=1, L=0, AVL=0, Limit=1111)
   151 000000FF 00                          DB 0x00     ; 段基址 (high)
   152                                      ; 数据段描述符 (4GB)
   153 00000100 FFFF                        DW 0xffff
   154 00000102 0000                        DW 0x0000
   155 00000104 00                          DB 0x00
   156 00000105 92                          DB 0x92     ; 属性 (P=1, DPL=00, S=1, TYPE=0010 -> 可读/可写)
   157 00000106 CF                          DB 0xcf
   158 00000107 00                          DB 0x00
   159                                  
   160                                  GDTR0:
   161 00000108 1700                        DW 8*3 - 1  ; GDT 界限 (23)
   162 0000010A [F0000000]                  DD GDT0     ; GDT 起始地址
   163                                  
   164                                  ; ---------------------------------
   165                                  ; 32 位模式代码 BITS 32
   166                                  ; ---------------------------------
   167                                  BITS 32
   168                                  prot_mode_start:
   169                                      ; 设置 32 位数据段寄存器
   170 0000010E 66B81000                    MOV AX, 0x0010  ; 0x0010 是数据段 (GDT 的第 2 项)
   171 00000112 8ED8                        MOV DS, AX
   172 00000114 8EC0                        MOV ES, AX
   173 00000116 8EE0                        MOV FS, AX
   174 00000118 8EE8                        MOV GS, AX
   175 0000011A 8ED0                        MOV SS, AX
   176                                      
   177 0000011C BC00FC0900                  MOV ESP, 0x9fc00 
   178                                      
   179                                      ; 跳转到 C 语言内核！
   180 00000121 E9(00C20000)                JMP 0xc200
   181                                  
   182                                  ; ---------------------------------
   183                                  ; 填充 & 魔法数字 (确保 512 字节)
   184                                  ; ---------------------------------
   185 00000126 <res D8h>                   RESB 510 - ($ - $$) 
   185          ******************       warning: uninitialized space declared in .text section: zeroing [-w+zeroing]
   186 000001FE 55AA                        DB 0x55, 0xaa
   187                                  
